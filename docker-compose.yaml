services:
  web:
    build: .
    command: >
      sh -c " python wait_for_postgres.py &&
      python wait_for_clickhouse.py &&
      python manage.py makemigrations &&
      python manage.py runserver 0.0.0.0:8000"
    ports: 
      - '8000:8000'
    volumes: 
      - ./backend:/app
    depends_on: 
      - postgres
      - clickhouse
    environment:
      - DJANGO_SECRET_KEY=dvz%!_dxp9xi5(5dura%y-#%o$#+j!1e$^ta*$ql&bkhz*7+_z
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=New password
      - CLICKHOUSE_DB=analytics_db
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=YnRjprs~PI2Gh
    networks:
      - app_network

  postgres:
    image: postgres:17.4-alpine3.21
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: New password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  clickhouse:
    image: clickhouse/clickhouse-server:25.3.1.2703-alpine
    restart: always
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: analytics_db
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: YnRjprs~PI2Gh
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --host=localhost --port=9000 --query 'SELECT 1'"]
      interval: 5s
      retries: 5
      start_period: 20s

volumes:
  clickhouse_data:
  postgres_data:

networks:
  app_network: